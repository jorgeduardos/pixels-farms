{"version":3,"file":"/js/dark-mode.js","mappings":";;;;;AAAA;AACA;AACA;AACA,IAAIA,aAAa,GAAG,KAApB;AAEA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB,EAEA;;AACA,IAAMC,OAAO,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAhB,EAEA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BN,EAAAA,QAAQ,CAACO,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,WAA1C,EAAuDH,KAAvD;AACAR,EAAAA,aAAa,GAAGQ,KAAhB;AACAP,EAAAA,SAAS,CAACW,OAAV,GAAoBZ,aAApB;AACD,EAED;;;AACA,SAASa,uBAAT,CAAiCL,KAAjC,EAAwC;AACtCM,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCP,KAAlC;AACD,EAED;;;AACA,IAAGM,YAAY,CAACE,OAAb,CAAqB,WAArB,KAAqC,IAArC,IAA6CF,YAAY,CAACE,OAAb,CAAqB,WAArB,KAAqCC,SAArF,EAA+F;AAC3FV,EAAAA,cAAc,CAACH,OAAO,CAACc,OAAT,CAAd;AACAL,EAAAA,uBAAuB,CAACb,aAAD,CAAvB;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BpB,aAA3B;AACH,CALD,MAKK;AACDO,EAAAA,cAAc,CAAEO,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAD,KAAwC,MAAzC,CAAd;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BpB,aAA3B;AACH,EAED;AACA;AACA;;;AAEAI,OAAO,CAACiB,gBAAR,CAAyB,QAAzB,EAAmC,UAACC,GAAD;AAAA,SAASf,cAAc,CAACe,GAAG,CAACJ,OAAL,CAAvB;AAAA,CAAnC,GAEA;;AACAjB,SAAS,CAACoB,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AACxCrB,EAAAA,aAAa,GAAG,CAACA,aAAjB;AAEAO,EAAAA,cAAc,CAACP,aAAD,CAAd;AACAa,EAAAA,uBAAuB,CAACb,aAAD,CAAvB;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BpB,aAA3B;AACD,CAPD,E","sources":["webpack://pixel-farm/./src/js/dark-mode.js"],"sourcesContent":["// ************************************** //\n//              DARK MODE                 //\n// ************************************** //\nlet darkModeState = false;\n\nconst inputDark = document.getElementById(\"dark-mode\");\n\n// MediaQueryList object\nconst useDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n// Toggles the \"dark-mode\" class\nfunction toggleDarkMode(state) {\n  document.documentElement.classList.toggle(\"dark-mode\", state);\n  darkModeState = state;\n  inputDark.checked = darkModeState;\n}\n\n// Sets localStorage state\nfunction setDarkModeLocalStorage(state) {\n  localStorage.setItem(\"dark-mode\", state);\n}\n\n// Initial setting\nif(localStorage.getItem(\"dark-mode\") == null || localStorage.getItem(\"dark-mode\") == undefined){\n    toggleDarkMode(useDark.matches);\n    setDarkModeLocalStorage(darkModeState);\n\n    console.log('dark mode: ', darkModeState)\n}else{\n    toggleDarkMode((localStorage.getItem(\"dark-mode\")) === 'true');\n\n    console.log('dark mode: ', darkModeState)\n}\n\n// Listen for changes in the OS settings.\n// Note: the arrow function shorthand works only in modern browsers, \n// for older browsers define the function using the function keyword.\n\nuseDark.addEventListener('change', (evt) => toggleDarkMode(evt.matches));\n\n// Toggles the \"dark-mode\" class on click and sets localStorage state\ninputDark.addEventListener(\"click\", () => {\n  darkModeState = !darkModeState;\n\n  toggleDarkMode(darkModeState);\n  setDarkModeLocalStorage(darkModeState);\n\n  console.log('dark mode: ', darkModeState)\n});\n"],"names":["darkModeState","inputDark","document","getElementById","useDark","window","matchMedia","toggleDarkMode","state","documentElement","classList","toggle","checked","setDarkModeLocalStorage","localStorage","setItem","getItem","undefined","matches","console","log","addEventListener","evt"],"sourceRoot":""}